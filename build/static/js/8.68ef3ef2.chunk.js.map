{"version":3,"sources":["pages/admin/DeviceEdit.js"],"names":["DeviceEdit","isMobile","useResponsive","navigate","useAuth","login","useNavigate","id","useParams","useState","device","setDevice","enqueueSnackbar","useIsMountedRef","useSnackbar","EditSchema","Yup","shape","deviceNumber","required","defaultValues","type","status","methods","useForm","resolver","yupResolver","reset","handleSubmit","setError","setValue","formState","isSubmitting","errors","onSubmit","data","a","axios","post","res","success","variant","err","useEffect","then","catch","title","sx","py","xs","maxWidth","container","spacing","item","sm","mb","mt","name","label","value","fullWidth","size","bgcolor","border","borderColor","loading"],"mappings":"+VAuBe,SAASA,IACtB,IAAMC,EAAWC,YAAc,OAAQ,MAEjCC,GADYC,cAAVC,MACSC,eACTC,EAAOC,cAAPD,GACR,EAA4BE,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEOC,GADcC,cACKC,cAAnBF,iBACDG,EAAaC,MAAaC,MAAM,CACpCC,aAAcF,MAAaG,SAAS,+BAGhCC,EAAgB,CACpBF,cAAoB,OAANR,QAAM,IAANA,OAAA,EAAAA,EAAQQ,eAAgB,GACtCG,MAAY,OAANX,QAAM,IAANA,OAAA,EAAAA,EAAQW,OAAQ,KACtBC,QAAQZ,GAA4B,WAAlBA,EAAOY,QAGrBC,EAAUC,YAAQ,CACtBC,SAAUC,YAAYX,GACtBK,kBAIAO,EAKEJ,EALFI,MAGAC,GAEEL,EAJFM,SAIEN,EAHFO,SAGEP,EAFFK,cAJF,EAMIL,EADFQ,UAAqBC,GALvB,EAKeC,OALf,EAKuBD,cAGjBE,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEAEGC,IAAMC,KAAN,0BAA8B/B,GAAK,CAAC4B,SAFvC,OAETI,EAFS,OAGf,IACKA,EAAIJ,KAAKK,UACV5B,EAAgB,oBAAqB,CAAC6B,QAAQ,YAC9CtC,EAAS,yBAGb,MAAMuC,IATS,2CAAH,sDA2Bd,OAbAC,qBAAU,WAERN,IAAMC,KAAN,2BAA+B/B,IAAMqC,MAAK,SAAAL,GAEpCA,EAAIJ,KAAKzB,SACXC,EAAU4B,EAAIJ,KAAKzB,QACnBiB,EAAMP,OAGPyB,OAAM,SAAAH,SAGR,IAED,cAAC,IAAD,CAAMI,MAAM,cAAZ,SACE,cAAC,IAAD,CAAWC,GAAI,CAAEC,GAAI,CAAEC,GAAI,KAAQC,SAAU,KAA7C,SACE,eAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACInD,GACA,cAAC,IAAD,CAAMoD,MAAI,EAACJ,GAAI,GAAIK,GAAI,EAAvB,SACE,cAAC,IAAD,MAGJ,eAAC,IAAD,CAAMD,MAAI,EAACJ,GAAI,GAAIK,GAAI,EAAvB,UACE,cAAC,IAAD,CAAYb,QAAQ,KAApB,gCAGA,cAAC,IAAD,CAASM,GAAM,CAACQ,GAAG,EAAGC,GAAG,KACzB,cAAC,IAAD,CAAcjC,QAASA,EAASW,SAAUN,EAAaM,GAAvD,SACE,eAAC,IAAD,CAAOkB,QAAS,EAAhB,UAEE,cAAC,IAAD,CAAcK,KAAK,eAAeC,MAAM,kBACxC,eAAC,IAAD,CAAWD,KAAK,OAAOC,MAAQ,cAA/B,UACE,wBAAQC,MAAQ,KAAhB,oBACA,wBAAQA,MAAQ,MAAhB,oBAEF,cAAC,IAAD,CAAWF,KAAK,SAASC,MAAM,WAC/B,cAAC,IAAD,CAAeE,WAAS,EAACC,KAAK,QAAQd,GAAI,CAAEe,QAAS,aAAcC,OAAQ,YAAaC,YAAa,cACnG3C,KAAK,SAASoB,QAAQ,YAAYwB,QAASjC,EAD7C","file":"static/js/8.68ef3ef2.chunk.js","sourcesContent":["import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport {useSnackbar} from 'notistack';\n// form\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { Stack, Alert, Grid, Switch, Container, Typography, Divider, MenuItem } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n// hooks\nimport useAuth from '../../hooks/useAuth';\nimport useIsMountedRef from '../../hooks/useIsMountedRef';\n// components\nimport { FormProvider, RHFSelect, RHFSwitch, RHFTextField } from '../../components/hook-form';\nimport CarFront from '../../components/CarFront';\nimport Page from '../../components/Page';\nimport axios from '../../utils/axios';\nimport useResponsive from '../../hooks/useResponsive';\n\n// ----------------------------------------------------------------------\n\nexport default function DeviceEdit() {\n  const isMobile = useResponsive('down', 'sm');\n  const { login } = useAuth();\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const [device, setDevice] = useState(null);\n  const isMountedRef = useIsMountedRef();\n  const {enqueueSnackbar} = useSnackbar();\n  const EditSchema = Yup.object().shape({\n    deviceNumber: Yup.string().required('Device Number is required'),\n  });\n\n  const defaultValues = {\n    deviceNumber: device?.deviceNumber || '',\n    type: device?.type || '4g',\n    status: device ? (device.status === \"active\") : true,\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(EditSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    setError,\n    setValue,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n  } = methods;\n\n  const onSubmit = async (data) => {\n    \n    const res = await axios.post(`/api/device/set/${id}`,{data});\n    try{\n      if(res.data.success){\n        enqueueSnackbar('Device is changed', {variant:'success'});\n        navigate('/admin/device-manage');\n      }\n    }\n    catch(err){\n      // console.log(err);\n    }\n      \n  };\n  useEffect(() => {\n   \n    axios.post(`/api/device/edit/${id}`).then(res => {\n      \n      if (res.data.device) {\n        setDevice(res.data.device);\n        reset(defaultValues);\n      }\n\n    }).catch(err => {\n\n    })\n  }, []);\n  return (\n    <Page title=\"Device Edit\">\n      <Container sx={{ py: { xs: 12 } }} maxWidth={'md'}>\n        <Grid container spacing={3}>\n          {!isMobile &&\n            <Grid item xs={12} sm={6} >\n              <CarFront />\n            </Grid>\n          }\n          <Grid item xs={12} sm={6} >\n            <Typography variant='h4'>\n              Device Information\n            </Typography>\n            <Divider sx = {{mb:4, mt:1}}/>\n            <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n              <Stack spacing={3}>\n\n                <RHFTextField name=\"deviceNumber\" label=\"Device Number\" />\n                <RHFSelect name=\"type\" label = \"Device Type\">\n                  <option value = \"4g\">4G Net</option>\n                  <option value = \"sms\">SMS</option>\n                </RHFSelect>\n                <RHFSwitch name=\"status\" label=\"Active\" />\n                <LoadingButton fullWidth size=\"large\" sx={{ bgcolor: 'grey.50016', border: '1px solid', borderColor: 'grey.50048' }}\n                  type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                  Save Changes.\n                </LoadingButton>\n              </Stack>\n\n            </FormProvider>\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}