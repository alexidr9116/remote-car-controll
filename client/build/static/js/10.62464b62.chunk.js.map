{"version":3,"sources":["sections/auth/VerifyCodeForm.js","pages/auth/VerifyCode.js"],"names":["VerifyCodeForm","navigate","useNavigate","otpVerify","useAuth","enqueueSnackbar","useSnackbar","VerifyCodeSchema","Yup","shape","code1","required","code2","code3","code4","code5","code6","useForm","mode","resolver","yupResolver","defaultValues","watch","control","setValue","handleSubmit","formState","isSubmitting","isValid","values","useEffect","document","addEventListener","handlePasteClipboard","onSubmit","data","a","afterLogin","result","success","variant","Object","join","error","console","event","clipboardData","getData","split","forEach","call","querySelectorAll","node","index","value","fieldIndex","Stack","direction","spacing","mb","justifyContent","keys","map","name","render","field","InputBase","id","autoFocus","placeholder","onChange","handleChange","target","maxLength","replace","fieldIntIndex","Number","length","nextfield","querySelector","focus","handleChangeWithNextField","inputProps","sx","py","textAlign","width","xs","sm","height","fontSize","bgcolor","borderRadius","LoadingButton","size","type","loading","disabled","border","borderColor","RootStyle","styled","display","alignItems","padding","theme","VerifyCode","Page","title","LogoOnlyLayout","Container","Box","maxWidth","mx","Button","component","RouterLink","to","startIcon","Iconify","icon","color","CarFront","Typography","paragraph","mt","Link","underline","cursor","onClick"],"mappings":"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","file":"static/js/10.62464b62.chunk.js","sourcesContent":["import * as Yup from 'yup';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\n// form\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { OutlinedInput, InputBase, Stack } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// hooks\nimport useAuth from '../../hooks/useAuth';\n// ----------------------------------------------------------------------\n\nexport default function VerifyCodeForm() {\n  const navigate = useNavigate();\n  const { otpVerify } = useAuth();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const VerifyCodeSchema = Yup.object().shape({\n    code1: Yup.string().required('Code is required'),\n    code2: Yup.string().required('Code is required'),\n    code3: Yup.string().required('Code is required'),\n    code4: Yup.string().required('Code is required'),\n    code5: Yup.string().required('Code is required'),\n    code6: Yup.string().required('Code is required'),\n  });\n\n  const defaultValues = {\n    code1: '',\n    code2: '',\n    code3: '',\n    code4: '',\n    code5: '',\n    code6: '',\n  };\n\n  const {\n    watch,\n    control,\n    setValue,\n    handleSubmit,\n    formState: { isSubmitting, isValid },\n  } = useForm({\n    mode: 'onBlur',\n    resolver: yupResolver(VerifyCodeSchema),\n    defaultValues,\n  });\n\n  const values = watch();\n\n  useEffect(() => {\n    document.addEventListener('paste', handlePasteClipboard);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onSubmit = async (data) => {\n    try {\n      const afterLogin = (result)=>{\n        if(result.success){\n          enqueueSnackbar('Phone verification is success', {variant:'success'})\n          navigate('/home');\n        }\n        else{\n          enqueueSnackbar('Your phonenumber is not registered', {variant:'error'})\n        }\n      }\n      (otpVerify(Object.values(data).join(''),afterLogin))\n      \n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handlePasteClipboard = (event) => {\n    let data = event?.clipboardData?.getData('Text') || '';\n\n    data = data.split('');\n\n    [].forEach.call(document.querySelectorAll('#field-code'), (node, index) => {\n      node.value = data[index];\n      const fieldIndex = `code${index + 1}`;\n      setValue(fieldIndex, data[index]);\n    });\n  };\n\n  const handleChangeWithNextField = (event, handleChange) => {\n    const { maxLength, value, name } = event.target;\n    const fieldIndex = name.replace('code', '');\n\n    const fieldIntIndex = Number(fieldIndex);\n\n    if (value.length >= maxLength) {\n      if (fieldIntIndex < 6) {\n        const nextfield = document.querySelector(`input[name=code${fieldIntIndex + 1}]`);\n\n        if (nextfield !== null) {\n          nextfield.focus();\n        }\n      }\n    }\n\n    handleChange(event);\n  };\n\n  return (\n    <>\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Stack direction=\"row\" spacing={3} mb={3} justifyContent=\"center\">\n        {Object.keys(values).map((name, index) => (\n          <Controller\n            key={name}\n            name={`code${index + 1}`}\n            control={control}\n            render={({ field }) => (\n              <InputBase\n                {...field}\n                id=\"field-code\"\n                autoFocus={index === 0}\n                placeholder=\"-\"\n                onChange={(event) => handleChangeWithNextField(event, field.onChange)}\n                inputProps={{\n                  maxLength: 1,\n                  sx: {\n                    py: 0.5,\n                    textAlign: 'center',\n                    width: { xs: 36, sm: 65 },\n                    height: { xs: 43, sm: 80 },\n                  },\n                }}\n                sx={{ fontSize: '2.3rem', bgcolor: 'grey.50016', borderRadius: 1, }}\n              />\n            )}\n          />\n        ))}\n\n      </Stack>\n      <LoadingButton\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\"\n        loading={isSubmitting}\n        disabled={!isValid}\n        sx={{bgcolor:'grey.50016',border:'1px solid',borderColor:'grey.50048'}}\n      >\n        Next\n      </LoadingButton>\n    </form>\n    \n    </>    \n  );\n}\n","import { Link as RouterLink } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Button, Link, Paper, Container, Typography } from '@mui/material';\n// layouts\nimport LogoOnlyLayout from '../../layout/LogoOnlyLayout';\n// components\nimport Page from '../../components/Page';\nimport Iconify from '../../components/Iconify';\nimport Image from '../../components/Image';\nimport CarFront from '../../components/CarFront'\n// sections\nimport  VerifyCodeForm  from '../../sections/auth/VerifyCodeForm';\n// import Timer from '../../components/Timer';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(8, 0),\n  height:'100vh'\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function VerifyCode() { \n  return (\n    <Page title=\"Verify\" sx={{ height: 1 }}>\n      <RootStyle>\n        <LogoOnlyLayout />\n\n        <Container>\n          <Box sx={{ maxWidth: 480, mx: 'auto', textAlign: 'center' }}>\n            <Button\n              size=\"small\"\n              component={RouterLink}\n              to={\"/auth/login\"}\n              startIcon={<Iconify icon={'eva:arrow-ios-back-fill'} width={20} height={20} />}\n              sx={{color:'text.primary' }}\n            >\n              Back\n            </Button>\n            <Box width={\"50%\"} sx={{ mx: 'auto', mb: 3}}>\n             <CarFront/>\n            </Box>\n            <Typography variant=\"h3\" paragraph >\n              Verification Code\n            </Typography>\n            <Typography  paragraph>\n              Please enter cerification code we sent to your phone number\n            </Typography>\n            <Box sx={{ mt: 5, mb: 3 }}>\n              <VerifyCodeForm />\n            </Box>\n            <Typography variant=\"body2\">\n              Haven't got your OTP number yet?  &nbsp;\n              <Link variant=\"subtitle2\" underline=\"none\" sx={{cursor:'pointer',color:'text.secondary'}} onClick={() => { }}>\n                Resend code\n              </Link>\n            </Typography>\n          </Box>\n          <div id = 'recaptcha-container' />\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"],"sourceRoot":""}