{"version":3,"sources":["components/Label.js","components/Scrollbar.js","components/SearchNotFound.js","sections/admin/device/DeviceListHead.js","components/InputStyle.js","sections/admin/device/DeviceListToolbar.js","sections/admin/device/DeviceMoreMenu.js","pages/admin/DeviceManage.js"],"names":["RootStyle","styled","theme","ownerState","isLight","palette","mode","color","variant","height","minWidth","lineHeight","borderRadius","cursor","alignItems","whiteSpace","display","justifyContent","padding","spacing","grey","fontSize","typography","pxToRem","fontFamily","backgroundColor","fontWeight","fontWeightBold","contrastText","main","styleFilled","border","styleOutlined","alpha","styleGhost","text","primary","secondary","common","white","Label","children","other","flexGrow","overflow","SimpleBarStyle","SimpleBarReact","maxHeight","opacity","width","zIndex","Scrollbar","sx","userAgent","navigator","test","Box","overflowX","timeout","clickOnTrack","SearchNotFound","searchQuery","Paper","Typography","gutterBottom","align","visuallyHidden","clip","margin","position","DeviceListHead","order","orderBy","rowCount","headLabel","numSelected","onRequestSort","onSelectAllClick","TableHead","TableRow","TableCell","bgcolor","Checkbox","indeterminate","checked","onClick","map","headCell","py","alignRight","sortDirection","id","TableSortLabel","hideSortIcon","active","direction","property","event","console","log","label","InputStyle","TextField","shouldForwardProp","prop","stretchStart","transition","transitions","create","easing","easeInOut","duration","shorter","breakpoints","up","borderWidth","borderColor","Toolbar","DeviceListToolbar","filterName","onFilterName","onDeleteDevice","useTheme","component","size","value","onChange","target","placeholder","InputProps","startAdornment","InputAdornment","Iconify","icon","Tooltip","title","IconButton","DeviceMoreMenu","onDelete","deviceId","useState","open","setOpen","ICON","useNavigate","mr","currentTarget","MenuPopover","Boolean","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","arrow","mt","px","MenuItem","RouterLink","to","TABLE_HEAD","DeviceManage","deviceList","setDeviceList","page","setPage","setOrder","selected","setSelected","setOrderBy","setFilterName","rowsPerPage","setRowsPerPage","useEffect","axios","post","then","res","data","list","catch","err","emptyRows","Math","max","length","filteredDevices","array","comparator","query","stabilizedThis","el","index","sort","a","b","filter","_device","deviceNumber","indexOf","toLowerCase","applySortFilter","descendingComparator","getComparator","isNotFound","Page","Container","xs","Card","deleteDevices","device","includes","_id","handleDeleteMultiDevice","Divider","TableContainer","Table","stickyHeader","newSelecteds","n","TableBody","slice","row","phoneNumber","status","type","isItemSelected","hover","tabIndex","role","selectedIndex","newSelected","concat","handleClick","sentenceCase","deleteDevice","handleDeleteDevice","style","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","e","onRowsPerPageChange","parseInt"],"mappings":"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","file":"static/js/8.853da198.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport { alpha, styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('span')(({ theme, ownerState }) => {\n  const isLight = theme.palette.mode === 'light';\n  const { color, variant } = ownerState;\n\n  const styleFilled = (color) => ({\n    color: theme.palette[color].contrastText,\n    backgroundColor: theme.palette[color].main,\n  });\n\n  const styleOutlined = (color) => ({\n    color: theme.palette[color].main,\n    backgroundColor: 'transparent',\n    border: `1px solid ${theme.palette[color].main}`,\n  });\n\n  const styleGhost = (color) => ({\n    color: theme.palette[color][isLight ? 'dark' : 'light'],\n    backgroundColor: alpha(theme.palette[color].main, 0.16),\n  });\n\n  return {\n    height: 22,\n    minWidth: 22,\n    lineHeight: 0,\n    borderRadius: 8,\n    cursor: 'default',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    padding: theme.spacing(0, 1),\n    color: theme.palette.grey[800],\n    fontSize: theme.typography.pxToRem(12),\n    fontFamily: theme.typography.fontFamily,\n    backgroundColor: theme.palette.grey[300],\n    fontWeight: theme.typography.fontWeightBold,\n\n    ...(color !== 'default'\n      ? {\n          ...(variant === 'filled' && { ...styleFilled(color) }),\n          ...(variant === 'outlined' && { ...styleOutlined(color) }),\n          ...(variant === 'ghost' && { ...styleGhost(color) }),\n        }\n      : {\n          ...(variant === 'outlined' && {\n            backgroundColor: 'transparent',\n            color: theme.palette.text.primary,\n            border: `1px solid ${theme.palette.grey[500_32]}`,\n          }),\n          ...(variant === 'ghost' && {\n            color: isLight ? theme.palette.text.secondary : theme.palette.common.white,\n            backgroundColor: theme.palette.grey[500_16],\n          }),\n        }),\n  };\n});\n\n// ----------------------------------------------------------------------\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf(['default', 'primary', 'secondary', 'info', 'success', 'warning', 'error']),\n  variant: PropTypes.oneOf(['filled', 'outlined', 'ghost']),\n};\n\nexport default function Label({ color = 'default', variant = 'ghost', children, ...other }) {\n  return (\n    <RootStyle ownerState={{ color, variant }} {...other}>\n      {children}\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport SimpleBarReact from 'simplebar-react';\n// @mui\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(() => ({\n  flexGrow: 1,\n  height: '100%',\n  overflow: 'hidden',\n}));\n\nconst SimpleBarStyle = styled(SimpleBarReact)(({ theme }) => ({\n  maxHeight: '100%',\n  '& .simplebar-scrollbar': {\n    '&:before': {\n      backgroundColor: alpha(theme.palette.grey[600], 0.48),\n    },\n    '&.simplebar-visible:before': {\n      opacity: 1,\n    },\n  },\n  '& .simplebar-track.simplebar-vertical': {\n    width: 10,\n  },\n  '& .simplebar-track.simplebar-horizontal .simplebar-scrollbar': {\n    height: 6,\n  },\n  '& .simplebar-mask': {\n    zIndex: 'inherit',\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nScrollbar.propTypes = {\n  children: PropTypes.node.isRequired,\n  sx: PropTypes.object,\n};\n\nexport default function Scrollbar({ children, sx, ...other }) {\n  const userAgent = typeof navigator === 'undefined' ? 'SSR' : navigator.userAgent;\n\n  const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent);\n\n  if (isMobile) {\n    return (\n      <Box sx={{ overflowX: 'auto', ...sx }} {...other}>\n        {children}\n      </Box>\n    );\n  }\n\n  return (\n    <RootStyle>\n      <SimpleBarStyle timeout={500} clickOnTrack={false} sx={sx} {...other}>\n        {children}\n      </SimpleBarStyle>\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Paper, Typography } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nSearchNotFound.propTypes = {\n  searchQuery: PropTypes.string,\n};\n\nexport default function SearchNotFound({ searchQuery = '', ...other }) {\n  return searchQuery ? (\n    <Paper {...other}>\n      <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\n        Not found\n      </Typography>\n      <Typography variant=\"body2\" align=\"center\">\n        No results found for &nbsp;\n        <strong>&quot;{searchQuery}&quot;</strong>. Try checking for typos or using complete words.\n      </Typography>\n    </Paper>\n  ) : (\n    <Typography variant=\"body2\"> Please enter keywords</Typography>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst visuallyHidden = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  height: '1px',\n  margin: -1,\n  overflow: 'hidden',\n  padding: 0,\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  width: '1px',\n};\n\nDeviceListHead.propTypes = {\n  order: PropTypes.oneOf(['asc', 'desc']),\n  orderBy: PropTypes.string,\n  rowCount: PropTypes.number,\n  headLabel: PropTypes.array,\n  numSelected: PropTypes.number,\n  onRequestSort: PropTypes.func,\n  onSelectAllClick: PropTypes.func,\n};\n\nexport default function DeviceListHead({\n  order,\n  orderBy,\n  rowCount,\n  headLabel,\n  numSelected,\n  onRequestSort,\n  onSelectAllClick,\n}) {\n  const createSortHandler = (property) => (event) => {\n    console.log(event,property);\n    onRequestSort(property);\n  };\n\n  return (\n    <TableHead >\n      <TableRow>\n        <TableCell padding=\"checkbox\" sx={{bgcolor:'primary.light'}}>\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onClick={onSelectAllClick}\n          />\n        </TableCell>\n        {headLabel.map((headCell) => (\n          <TableCell\n            sx={{py:1.5,bgcolor:'primary.light'}}\n            key={headCell.id}\n            align={headCell.alignRight ? 'right' : 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              hideSortIcon\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id) }\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box sx={{ ...visuallyHidden }}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","// @mui\nimport { styled } from '@mui/material/styles';\nimport { TextField } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst InputStyle = styled(TextField, {\n  shouldForwardProp: (prop) => prop !== 'stretchStart',\n})(({ stretchStart, theme }) => ({\n  '& .MuiOutlinedInput-root': {\n    transition: theme.transitions.create(['box-shadow', 'width'], {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.shorter,\n    }),\n    ...(stretchStart && {\n      width: stretchStart,\n      '&.Mui-focused': {\n        [theme.breakpoints.up('sm')]: {\n          width: stretchStart + 60,\n        },\n      },\n    }),\n  },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`,\n  },\n}));\n\nexport default InputStyle;\n","import PropTypes from 'prop-types';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Toolbar, Tooltip, IconButton, Typography, InputAdornment } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\nimport InputStyle from '../../../components/InputStyle';\n\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n  height: 70,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3),\n}));\n\n// ----------------------------------------------------------------------\n\nDeviceListToolbar.propTypes = {\n  numSelected: PropTypes.number,\n  filterName: PropTypes.string,\n  onFilterName: PropTypes.func,\n  onDeleteDevice: PropTypes.func,\n};\n\nexport default function DeviceListToolbar({ numSelected, filterName, onFilterName, onDeleteDevice }) {\n  const theme = useTheme();\n\n  return (\n    <RootStyle\n      sx={{\n        ...(numSelected > 0 && {\n          color: 'text.primary',\n          bgcolor:  'primary.dark',\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography component=\"div\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <InputStyle\n          size='small'\n          stretchStart={240}\n          value={filterName}\n          onChange={(event) => onFilterName(event.target.value)}\n          placeholder=\"Search user...\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Iconify icon={'eva:search-fill'} sx={{ color: 'text.disabled', width: 20, height: 20 }} />\n              </InputAdornment>\n            ),\n          }}\n        />\n      )}\n\n      {numSelected > 0 &&\n        <Tooltip title=\"Delete\">\n          <IconButton onClick={onDeleteDevice}>\n            <Iconify icon={'eva:trash-2-outline'} />\n          </IconButton>\n        </Tooltip>\n      }\n\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { paramCase } from 'change-case';\nimport { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// @mui\nimport { MenuItem, IconButton } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\nimport MenuPopover from '../../../components/MenuPopover';\n\n// ----------------------------------------------------------------------\n\nDeviceMoreMenu.propTypes = {\n  onDelete: PropTypes.func,\n  deviceId:PropTypes.string,\n};\n\nexport default function DeviceMoreMenu({ onDelete,deviceId }) {\n  const [open, setOpen] = useState(null);\n  const navigate = useNavigate();\n  const handleOpen = (event) => {\n    setOpen(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setOpen(null);\n  };\n\n  const ICON = {\n    mr: 2,\n    width: 20,\n    height: 20,\n  };\n\n  return (\n    <>\n      <IconButton onClick={handleOpen}>\n        <Iconify icon={'eva:more-vertical-fill'} width={20} height={20} />\n      </IconButton>\n\n      <MenuPopover\n        open={Boolean(open)}\n        anchorEl={open}\n        onClose={handleClose}\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        arrow=\"right-top\"\n        sx={{\n          mt: -1,\n          width: 170,\n          '& .MuiMenuItem-root': { px: 1, typography: 'body2', borderRadius: 0.75 },\n        }}\n      >\n        <MenuItem onClick={onDelete} sx={{ color: 'error.main' }}>\n          <Iconify icon={'eva:trash-2-outline'} sx={{ ...ICON }} />\n          Delete\n        </MenuItem>\n\n        <MenuItem component={RouterLink} to={`/admin/device/${deviceId}`}>\n          <Iconify icon={'eva:edit-fill'} sx={{ ...ICON }} />\n          Edit\n        </MenuItem>\n      </MenuPopover> \n    </>\n  );\n}\n","import { sentenceCase } from 'change-case';\nimport { useState,useEffect } from 'react';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Card,\n  Table,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n  Divider,\n} from '@mui/material';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Iconify from '../../components/Iconify';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\n\n// sections\nimport { DeviceListHead, DeviceListToolbar, DeviceMoreMenu } from '../../sections/admin/device';\nimport axios from \"../../utils/axios\";\n\n\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'deviceNumber', label: 'Device Number' },\n  { id: 'phoneNumber', label: 'Phone Number' },\n  { id: 'type', label: 'Type' },\n  { id: 'status', label: 'Status' },\n  { id: '' },\n];\n\n// ----------------------------------------------------------------------\n\n\nexport default function DeviceManage() {\n  const theme = useTheme();\n\n  const [deviceList, setDeviceList] = useState([]);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleRequestSort = (property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = deviceList.map((n) => n._id); //  n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (_id) => {\n    const selectedIndex = selected.indexOf(_id);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, _id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (filterName) => {\n    setFilterName(filterName);\n    setPage(0);\n  };\n\n  const handleDeleteDevice = (_id) => {\n    const deleteDevice = deviceList.filter((device) => device._id !== _id);\n    setSelected([]);\n    setDeviceList(deleteDevice);\n  };\n\n  const handleDeleteMultiDevice = (selected) => {\n    const deleteDevices = deviceList.filter((device) => !selected.includes(device._id));\n    setSelected([]);\n    setDeviceList(deleteDevices);\n  };\n\n  useEffect(()=>{\n    axios.post('/api/device/list/all').then(res=>{\n      setDeviceList(res.data.list);\n    })\n    .catch(err=>{\n\n    })\n  },[]);\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - deviceList.length) : 0;\n\n  const filteredDevices = applySortFilter(deviceList, getComparator(order, orderBy), filterName);\n\n  const isNotFound = !filteredDevices.length && Boolean(filterName);\n\n  return (\n    <Page title=\"Device Manage\">\n      <Container sx={{ py: { xs: 12 } }}>\n\n        <Card >\n          <DeviceListToolbar\n            numSelected={selected.length}\n            filterName={filterName}\n            onFilterName={handleFilterByName}\n            onDeleteDevice={() => handleDeleteMultiDevice(selected)}\n          />\n          <Divider />\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 650, maxHeight: '70vh' }}>\n              <Table size=\"small\" stickyHeader>\n                <DeviceListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={deviceList.length}\n                  numSelected={selected.length}\n                  onRequestSort={handleRequestSort}\n                  onSelectAllClick={handleSelectAllClick}\n                />\n                <TableBody>\n                  {filteredDevices.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    const { _id, deviceNumber, phoneNumber, status, type } = row;\n                    const isItemSelected = selected.indexOf(_id) !== -1;\n                   \n                    return (\n                      <TableRow\n                        hover\n                        key={_id}\n                        tabIndex={-1}\n                        role=\"checkbox\"\n                        selected={isItemSelected}\n                        aria-checked={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox checked={isItemSelected} onClick={() => handleClick(_id)} />\n                        </TableCell>\n                        <TableCell align=\"left\">{deviceNumber}</TableCell>\n                        <TableCell align=\"left\">{phoneNumber}</TableCell>\n                        <TableCell align=\"left\">{type}</TableCell> \n                        <TableCell align=\"left\">\n                          <Label\n                            color={(status === 'active' && 'success') || 'error'}\n                          >\n                            {sentenceCase(status)}\n                          </Label>\n                        </TableCell>\n\n                        <TableCell align=\"right\">\n                          <DeviceMoreMenu deviceId = {_id} onDelete={() => handleDeleteDevice(_id)} />\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                {isNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                        <SearchNotFound searchQuery={filterName} />\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25, 50]}\n            component=\"div\"\n            count={filteredDevices.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={(e, page) => setPage(page)}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  console.log(array);\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return array.filter((_device) => _device.deviceNumber.indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n"],"sourceRoot":""}